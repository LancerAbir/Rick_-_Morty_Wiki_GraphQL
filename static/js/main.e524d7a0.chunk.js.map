{"version":3,"sources":["GraphQL/Queries.js","Components/GetCharacters.js","logo/Rick_and_Morty_logo.png","Components/Layout/Navbar.js","Components/Pages/CharactersPage.js","Components/GetEpisodes.js","Components/Pages/EpisodesPage.js","Components/Pages/Home.js","Components/GetLocations.js","Components/Pages/LocationsPage.js","Components/Pages/SinglePages/SingleCharacter.js","Components/Pages/SinglePages/SingleEpisode.js","Components/Pages/SinglePages/SingleLocation.js","App.js","reportWebVitals.js","index.js"],"names":["GET_EPISODES_QUERY","gql","GET_SINGLE_EPISODE_QUERY","GET_CHARACTERS_QUERY","GET_SINGLE_CHARACTERS_QUERY","GET_LOCATIONS_QUERY","GET_SINGLE_LOCATIONS_QUERY","GetCharacters","data","useQuery","useState","charactersData","setCharactersData","useEffect","characters","results","className","map","src","image","alt","name","to","id","style","marginRight","marginBottom","marginTop","Navbar","logo","type","active","CharactersPage","GetEpisodes","episodesData","setEpisodesData","episodes","backgroundColor","Math","floor","random","toString","color","textDecoration","EpisodesPage","Home","class","role","GetLocations","locationsData","setLocationsData","locations","dimension","icon","faAtom","LocationsPage","SingleCharacter","characterID","useParams","variables","loading","error","singleData","setSingleData","character","width","height","created","gender","species","status","SingleEpisode","episodesID","episode","air_date","SingleLocation","locationID","location","console","log","errorLink","onError","graphqlErrors","networkErrors","message","path","alert","link","from","HttpLink","uri","client","ApolloClient","cache","InMemoryCache","App","ApolloProvider","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e524d7a0.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_EPISODES_QUERY = gql`\r\n   query {\r\n      episodes {\r\n         results {\r\n            id\r\n            name\r\n            air_date\r\n            episode\r\n            created\r\n         }\r\n      }\r\n   }\r\n`;\r\n\r\nexport const GET_SINGLE_EPISODE_QUERY = gql`\r\n   query ($id: ID!) {\r\n      episode(id: $id) {\r\n         id\r\n         episode\r\n         air_date\r\n         created\r\n         name\r\n      }\r\n   }\r\n`;\r\n\r\nexport const GET_CHARACTERS_QUERY = gql`\r\n   query {\r\n      characters {\r\n         results {\r\n            id\r\n            name\r\n            status\r\n            species\r\n            type\r\n            gender\r\n            image\r\n            created\r\n         }\r\n      }\r\n   }\r\n`;\r\n\r\nexport const GET_SINGLE_CHARACTERS_QUERY = gql`\r\n   query ($id: ID!) {\r\n      character(id: $id) {\r\n         id\r\n         name\r\n         status\r\n         species\r\n         type\r\n         gender\r\n         image\r\n         episode {\r\n            id\r\n            name\r\n            air_date\r\n            episode\r\n            characters {\r\n               id\r\n               name\r\n               status\r\n               species\r\n               type\r\n               gender\r\n               image\r\n               created\r\n            }\r\n         }\r\n         created\r\n      }\r\n   }\r\n`;\r\n\r\nexport const GET_LOCATIONS_QUERY = gql`\r\n   query {\r\n      locations {\r\n         results {\r\n            id\r\n            name\r\n            type\r\n            dimension\r\n            created\r\n         }\r\n      }\r\n   }\r\n`;\r\n\r\nexport const GET_SINGLE_LOCATIONS_QUERY = gql`\r\n   query ($id: ID!) {\r\n      location(id: $id) {\r\n         id\r\n         name\r\n         type\r\n         dimension\r\n         created\r\n         residents {\r\n            id\r\n            name\r\n            status\r\n            species\r\n            type\r\n            gender\r\n            created\r\n         }\r\n      }\r\n   }\r\n`;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// Import Local Components\r\nimport { GET_CHARACTERS_QUERY } from \"../GraphQL/Queries\";\r\n\r\nconst GetCharacters = () => {\r\n   const { data } = useQuery(GET_CHARACTERS_QUERY);\r\n\r\n   const [charactersData, setCharactersData] = useState([]);\r\n\r\n   useEffect(() => {\r\n      setCharactersData(data && data.characters.results);\r\n   }, [data]);\r\n   // console.log(charactersData);\r\n   return (\r\n      <div className=\"pr-5 pl-5\">\r\n         <div className=\"row\">\r\n            <div className=\"col-md-12 mt-3 text-center\">\r\n               <h2>Get Characters Data</h2>\r\n            </div>\r\n            {charactersData\r\n               ? charactersData.map((data) => (\r\n                    <div\r\n                       key={data.id}\r\n                       className=\"col-md-3 col-sm-6 col-12 mb-3 item\"\r\n                    >\r\n                       <div className=\"card item-card card-block\">\r\n                          <img\r\n                             className=\"card-img-top image-width\"\r\n                             src={data.image}\r\n                             alt={data.name}\r\n                          />\r\n                          <div className=\"pl-3 pb-3 pr-3\">\r\n                             <h5 className=\"card-title  mt-3 mb-3\">\r\n                                {data.name}\r\n                             </h5>\r\n                             <p className=\"card-text\">\r\n                                This is a company that builds websites, web apps\r\n                                and e-commerce solutions.\r\n                             </p>\r\n                             <Link\r\n                                to={`/singleCharacter/${data.id}`}\r\n                                className=\"btn btn-primary\"\r\n                             >\r\n                                <p\r\n                                   style={{\r\n                                      marginRight: \"0px\",\r\n                                      marginBottom: \"-8px\",\r\n                                      marginTop: \"5px\",\r\n                                   }}\r\n                                >\r\n                                   Read More\r\n                                </p>\r\n                             </Link>\r\n                          </div>\r\n                       </div>\r\n                    </div>\r\n                 ))\r\n               : \"Loading...\"}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default GetCharacters;\r\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.42c8df0b.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../logo/Rick_and_Morty_logo.png\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand logo\" to=\"/\">\r\n                <img src={logo} alt=\"logo\" />\r\n            </Link>\r\n            <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarSupportedContent\"\r\n                aria-controls=\"navbarSupportedContent\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n            >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div\r\n                className=\"collapse navbar-collapse\"\r\n                id=\"navbarSupportedContent\"\r\n            >\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" active to=\"/episodes\">\r\n                            Episodes\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link active\"\r\n                            active\r\n                            to=\"/characters\"\r\n                        >\r\n                            Characters{\" \"}\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link active\"\r\n                            active\r\n                            to=\"/locations\"\r\n                        >\r\n                            Locations\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport GetCharacters from \"../GetCharacters\";\r\nimport Navbar from \"../Layout/Navbar\";\r\n\r\nconst CharactersPage = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <GetCharacters />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CharactersPage;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// Import Local Components\r\nimport { GET_EPISODES_QUERY } from \"../GraphQL/Queries\";\r\n\r\nconst GetEpisodes = () => {\r\n   const { data } = useQuery(GET_EPISODES_QUERY);\r\n\r\n   const [episodesData, setEpisodesData] = useState([]);\r\n\r\n   useEffect(() => {\r\n      setEpisodesData(data && data.episodes.results);\r\n   }, [data]);\r\n   // console.log(episodesData);\r\n\r\n   return (\r\n      <div className=\"pr-5 pl-5\">\r\n         <div className=\"row\">\r\n            <div className=\"col-md-12 mt-3 mb-3 text-center\">\r\n               <h2>Get Episodes Data</h2>\r\n            </div>\r\n\r\n            {episodesData\r\n               ? episodesData.map((data) => (\r\n                    <div\r\n                       key={data.id}\r\n                       className=\"col-md-3 col-sm-6 col-12 mb-4\"\r\n                    >\r\n                       <div\r\n                          style={{\r\n                             backgroundColor: `#${Math.floor(\r\n                                Math.random() * 1677729892\r\n                             ).toString(16)}`,\r\n                          }}\r\n                          className=\"episodesBox\"\r\n                       >\r\n                          <Link to={`/singleEpisode/${data.id}`}>\r\n                             <p\r\n                                style={{\r\n                                   color: \"#fff\",\r\n                                   textDecoration: \"none\",\r\n                                }}\r\n                             >\r\n                                Episodes Number: {data.id}\r\n                             </p>\r\n                          </Link>\r\n                       </div>\r\n                    </div>\r\n                 ))\r\n               : \"Loading...\"}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default GetEpisodes;\r\n","import React from \"react\";\r\nimport GetEpisodes from \"../GetEpisodes\";\r\nimport Navbar from \"../Layout/Navbar\";\r\n\r\nconst EpisodesPage = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <GetEpisodes />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EpisodesPage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"../Layout/Navbar\";\r\n\r\nconst Home = () => {\r\n   return (\r\n      <div>\r\n         <Navbar />\r\n         <div class=\"jumbotron\">\r\n            <h1 class=\"display-4\">Rick & Morty Wiki ..!</h1>\r\n            <p class=\"lead\">\r\n               This is a simple hero unit, a simple jumbotron-style component\r\n               for calling extra attention to featured content or information.\r\n            </p>\r\n            <hr class=\"my-4\" />\r\n            <p>\r\n               It uses utility classes for typography and spacing to space\r\n               content out within the larger container.\r\n            </p>\r\n            <p class=\"lead\">\r\n               <Link class=\"btn btn-primary btn-lg\" to=\"/\" role=\"button\">\r\n                  Learn more\r\n               </Link>\r\n            </p>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Home;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport { faAtom } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// Import Local Components\r\nimport { GET_LOCATIONS_QUERY } from \"../GraphQL/Queries\";\r\n\r\nconst GetLocations = () => {\r\n   const { data } = useQuery(GET_LOCATIONS_QUERY);\r\n\r\n   const [locationsData, setLocationsData] = useState([]);\r\n\r\n   useEffect(() => {\r\n      setLocationsData(data && data.locations.results);\r\n   }, [data]);\r\n   //    console.log(locationsData);\r\n\r\n   return (\r\n      <div className=\"pr-5 pl-5\">\r\n         <div className=\"row\">\r\n            <div className=\"col-md-12 mt-3 text-center\">\r\n               <h2>Get Locations Data</h2>\r\n            </div>\r\n\r\n            {locationsData\r\n               ? locationsData.map((data) => (\r\n                    <div key={data.id} className=\"col-md-4 col-lg-4 column\">\r\n                       <div className=\"card gr-1\">\r\n                          <div className=\"txt\">\r\n                             <h1>Location Id: {data.id}</h1>\r\n                             <p>Dimension: {data.dimension}</p>\r\n                          </div>\r\n                          <Link to={`/singleLocation/${data.id}`}>more</Link>\r\n                          <div className=\"ico-card\">\r\n                             <i>\r\n                                <FontAwesomeIcon icon={faAtom} />\r\n                             </i>\r\n                          </div>\r\n                       </div>\r\n                    </div>\r\n                 ))\r\n               : \"Loading...\"}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default GetLocations;\r\n","import React from \"react\";\r\nimport GetLocations from \"../GetLocations\";\r\nimport Navbar from \"../Layout/Navbar\";\r\n\r\nconst LocationsPage = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <GetLocations />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LocationsPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_SINGLE_CHARACTERS_QUERY } from \"../../../GraphQL/Queries\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Import Local Components\r\nimport Navbar from \"../../Layout/Navbar\";\r\n\r\nconst SingleCharacter = () => {\r\n   let { characterID } = useParams();\r\n\r\n   const { loading, error, data } = useQuery(GET_SINGLE_CHARACTERS_QUERY, {\r\n      variables: { id: characterID },\r\n   });\r\n\r\n   // console.log(data);\r\n   const [singleData, setSingleData] = useState([]);\r\n\r\n   useEffect(() => {\r\n      setSingleData(data && data.character);\r\n   }, [data]);\r\n\r\n   return (\r\n      <div>\r\n         <Navbar />\r\n         <div className=\"pr-5 pl-5\">\r\n            {singleData ? (\r\n               <div className=\"row\">\r\n                  <div className=\"col-md-8 offset-md-2 col-sm-12 col-12 margin-30px-bottom xs-margin-20px-bottom mt-5\">\r\n                     <div className=\"services-block-three\">\r\n                        <span>\r\n                           <div className=\"padding-15px-bottom\">\r\n                              <i className=\"fa fa-eercast\"></i>\r\n                           </div>\r\n                           <h2>\r\n                              Single Character - {singleData && singleData.id}\r\n                           </h2>\r\n                           <img\r\n                              src={singleData && singleData.image}\r\n                              className=\"rounded-circle mb-2\"\r\n                              style={{ width: \"70px\", height: \"70px\" }}\r\n                              alt={singleData && singleData.name}\r\n                           />\r\n\r\n                           <h4>{singleData && singleData.name} </h4>\r\n                           <p className=\"xs-font-size13 xs-line-height-22\">\r\n                              Created-{singleData && singleData.created}\r\n                           </p>\r\n                           <p className=\"xs-font-size13 xs-line-height-22\">\r\n                              Gender-{singleData && singleData.gender}\r\n                           </p>\r\n                           <p className=\"xs-font-size13 xs-line-height-22\">\r\n                              Species-{singleData && singleData.species}\r\n                           </p>\r\n                           <p className=\"xs-font-size13 xs-line-height-22\">\r\n                              Status-{singleData && singleData.status}\r\n                           </p>\r\n                        </span>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            ) : (\r\n               <div className=\"row\">\r\n                  <div className=\"col-md-12 mt-3 mb-3 text-center\">\r\n                     <h2>Loading...</h2>\r\n                  </div>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SingleCharacter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_SINGLE_EPISODE_QUERY } from \"../../../GraphQL/Queries\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Import Local Components\r\nimport Navbar from \"../../Layout/Navbar\";\r\n\r\nconst SingleEpisode = () => {\r\n   let { episodesID } = useParams();\r\n\r\n   const { loading, error, data } = useQuery(GET_SINGLE_EPISODE_QUERY, {\r\n      variables: { id: episodesID },\r\n   });\r\n\r\n   const [singleData, setSingleData] = useState([]);\r\n   useEffect(() => {\r\n      setSingleData(data && data.episode);\r\n   }, [data]);\r\n\r\n   // if (loading) return \"Loading...\";\r\n   // if (error) return `Error! ${error.message}`;\r\n\r\n   return (\r\n      <div>\r\n         <Navbar />\r\n\r\n         <div className=\"pr-5 pl-5\">\r\n            {singleData ? (\r\n               <div className=\"row\">\r\n                  <div className=\"col-md-8 offset-md-2 col-sm-12 col-12 margin-30px-bottom xs-margin-20px-bottom mt-5\">\r\n                     <div className=\"services-block-three\">\r\n                        <span>\r\n                           <div className=\"padding-15px-bottom\">\r\n                              <i className=\"fa fa-eercast\"></i>\r\n                           </div>\r\n                           <h2>\r\n                              Single Episode - {singleData && singleData.id}\r\n                           </h2>\r\n                           <h4>{singleData && singleData.name}</h4>\r\n                           <p className=\"xs-font-size13 xs-line-height-22\">\r\n                              Created-{singleData && singleData.created}\r\n                           </p>\r\n                           <p className=\"xs-font-size13 xs-line-height-22\">\r\n                              Episode-{singleData && singleData.episode}\r\n                           </p>\r\n                           <p className=\"xs-font-size13 xs-line-height-22\">\r\n                              Air Date is {singleData && singleData.air_date}\r\n                           </p>\r\n                        </span>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            ) : (\r\n               <div className=\"row\">\r\n                  <div className=\"col-md-12 mt-3 mb-3 text-center\">\r\n                     <h2>Loading...</h2>\r\n                  </div>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SingleEpisode;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_SINGLE_LOCATIONS_QUERY } from \"../../../GraphQL/Queries\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Import Local Components\r\nimport Navbar from \"../../Layout/Navbar\";\r\n\r\nconst SingleLocation = () => {\r\n   let { locationID } = useParams();\r\n\r\n   const { loading, error, data } = useQuery(GET_SINGLE_LOCATIONS_QUERY, {\r\n      variables: { id: locationID },\r\n   });\r\n\r\n   const [singleData, setSingleData] = useState([]);\r\n   useEffect(() => {\r\n      setSingleData(data && data.location);\r\n   }, [data]);\r\n\r\n   console.log(singleData);\r\n\r\n   // if (loading) return \"Loading...\";\r\n   // if (error) return `Error! ${error.message}`;\r\n\r\n   return (\r\n      <div>\r\n         <Navbar />\r\n         <div className=\"pr-5 pl-5\">\r\n            {singleData ? (\r\n               <div className=\"row\">\r\n                  <div className=\"col-md-8 offset-md-2 col-sm-12 col-12 margin-30px-bottom xs-margin-20px-bottom mt-5\">\r\n                     <div className=\"services-block-three\">\r\n                        <span>\r\n                           <div className=\"padding-15px-bottom\">\r\n                              <i className=\"fa fa-eercast\"></i>\r\n                           </div>\r\n                           <h2>\r\n                              Single Location Data -\r\n                              {singleData && singleData.id}\r\n                           </h2>\r\n\r\n                           <h4>{singleData && singleData.name} </h4>\r\n                           <p className=\"xs-font-size13 xs-line-height-22\">\r\n                              Created-{singleData && singleData.created}\r\n                           </p>\r\n                           <p className=\"xs-font-size13 xs-line-height-22\">\r\n                              Gender-{singleData && singleData.dimension}\r\n                           </p>\r\n                           <p className=\"xs-font-size13 xs-line-height-22\">\r\n                              Species-{singleData && singleData.episode}\r\n                           </p>\r\n                        </span>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            ) : (\r\n               <div className=\"row\">\r\n                  <div className=\"col-md-12 mt-3 mb-3 text-center\">\r\n                     <h2>Loading...</h2>\r\n                  </div>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SingleLocation;\r\n","import {\r\n   ApolloClient,\r\n   ApolloProvider,\r\n   from,\r\n   HttpLink,\r\n   InMemoryCache,\r\n} from \"@apollo/client\";\r\nimport { onError } from \"@apollo/client/link/error\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n// Import Local Components\r\nimport CharactersPage from \"./Components/Pages/CharactersPage\";\r\nimport EpisodesPage from \"./Components/Pages/EpisodesPage\";\r\nimport Home from \"./Components/Pages/Home\";\r\nimport LocationsPage from \"./Components/Pages/LocationsPage\";\r\nimport SingleCharacter from \"./Components/Pages/SinglePages/SingleCharacter\";\r\nimport SingleEpisode from \"./Components/Pages/SinglePages/SingleEpisode\";\r\nimport SingleLocation from \"./Components/Pages/SinglePages/SingleLocation\";\r\n// import NotFound from \"./Components/Pages/404NotFound\";\r\n\r\n// Check is Error\r\nconst errorLink = onError(({ graphqlErrors, networkErrors }) => {\r\n   if (graphqlErrors) {\r\n      graphqlErrors.map(({ message, location, path }) => {\r\n         alert(`GraphQL Error ${message}`);\r\n      });\r\n   }\r\n});\r\n// API Link\r\nconst link = from([\r\n   errorLink,\r\n   new HttpLink({ uri: \"https://rickandmortyapi.com/graphql\" }),\r\n]);\r\n\r\n// Apollo Client Setup\r\nconst client = new ApolloClient({\r\n   cache: new InMemoryCache(),\r\n   link,\r\n});\r\n\r\nfunction App() {\r\n   return (\r\n      <div className=\"App\">\r\n         <BrowserRouter>\r\n            <Switch>\r\n               <ApolloProvider client={client}>\r\n                  <Route exact path=\"/\" component={Home} />\r\n                  <Route path=\"/episodes\" component={EpisodesPage} />\r\n                  <Route path=\"/characters\" component={CharactersPage} />\r\n                  <Route path=\"/locations\" component={LocationsPage} />\r\n                  <Route path=\"/singleEpisode/:episodesID\">\r\n                     <SingleEpisode></SingleEpisode>\r\n                  </Route>\r\n                  <Route path=\"/singleCharacter/:characterID\">\r\n                     <SingleCharacter></SingleCharacter>\r\n                  </Route>\r\n                  <Route path=\"/singleLocation/:locationID\">\r\n                     <SingleLocation></SingleLocation>\r\n                  </Route>\r\n               </ApolloProvider>\r\n            </Switch>\r\n         </BrowserRouter>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}